# Valores predeterminados para el Helm Chart de PokeCare

# Configuración global
global:
  environment: development
  imageRegistry: acrpokecare.azurecr.io
  imageTag: latest
  imagePullSecrets: []

# Configuración del frontend
frontend:
  enabled: true
  replicaCount: 2
  image:
    repository: pokecare-frontend
    pullPolicy: IfNotPresent
  service:
    type: ClusterIP
    port: 80
  resources:
    requests:
      cpu: 100m
      memory: 128Mi
    limits:
      cpu: 200m
      memory: 256Mi
  autoscaling:
    enabled: true
    minReplicas: 2
    maxReplicas: 5
    targetCPUUtilizationPercentage: 80

# Configuración del API Gateway
apiGateway:
  enabled: true
  replicaCount: 2
  image:
    repository: pokecare-api-gateway
    pullPolicy: IfNotPresent
  service:
    type: ClusterIP
    port: 80
  resources:
    requests:
      cpu: 100m
      memory: 128Mi
    limits:
      cpu: 200m
      memory: 256Mi

# Configuración del servicio de Pokémon
pokemonService:
  enabled: true
  replicaCount: 2
  image:
    repository: pokecare-pokemon-service
    pullPolicy: IfNotPresent
  service:
    type: ClusterIP
    port: 8080
  resources:
    requests:
      cpu: 100m
      memory: 128Mi
    limits:
      cpu: 200m
      memory: 256Mi

# Configuración del servicio de Usuarios
userService:
  enabled: true
  replicaCount: 2
  image:
    repository: pokecare-user-service
    pullPolicy: IfNotPresent
  service:
    type: ClusterIP
    port: 8080
  resources:
    requests:
      cpu: 100m
      memory: 128Mi
    limits:
      cpu: 200m
      memory: 256Mi

# Configuración del servicio de Guardería
daycareService:
  enabled: true
  replicaCount: 2
  image:
    repository: pokecare-daycare-service
    pullPolicy: IfNotPresent
  service:
    type: ClusterIP
    port: 8080
  resources:
    requests:
      cpu: 100m
      memory: 128Mi
    limits:
      cpu: 200m
      memory: 256Mi

# Configuración de MongoDB
mongodb:
  enabled: true
  auth:
    rootPassword: "changeme"
    username: "pokecare"
    password: "changeme"
    database: "pokecare"
  persistence:
    enabled: true
    size: 8Gi

# Configuración de Redis
redis:
  enabled: true
  auth:
    password: "changeme"
  master:
    persistence:
      enabled: true
      size: 4Gi

# Configuración de Ingress
ingress:
  enabled: true
  className: "nginx"
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
  hosts:
    - host: pokecare.local
      paths:
        - path: /
          pathType: Prefix
          service: pokecare-frontend
          port: 80
        - path: /api
          pathType: Prefix
          service: pokecare-api-gateway
          port: 80

# Configuración de monitoreo
monitoring:
  enabled: true
  serviceMonitor:
    enabled: true
  prometheusRule:
    enabled: true